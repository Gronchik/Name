from Keyboards import menuKeyboard, mainMenuKeyboard
from Functions import stickerStats
from DBase import bdCheckId, bdPasteUser, bdChangeStats, bdStatistic
from Secure import bot_Token
from aiogram.dispatcher.filters import Text
from aiogram import Bot, Dispatcher, types
from aiogram import executor

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=bot_Token, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot)


@dp.message_handler(Text(equals='–º–µ–Ω—é', ignore_case=True))
async def menu(message: types.Message):
    with open("images/Items/Menu.jpg", "rb") as photo_file:
        await bot.send_photo(message.chat.id, photo_file, caption='–ú–µ–Ω—é:', reply_markup=menuKeyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    if bdCheckId(message.from_user.id):
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç.", reply_markup=mainMenuKeyboard)
    else:
        bdPasteUser(message.from_user.id)
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –¢—ã –∫—Ç–æ?", reply_markup=mainMenuKeyboard)


@dp.message_handler(commands=['stam'])
async def stam(message: types.Message):
    bdChangeStats(message.from_user.id, stamina=-7)
    await message.answer("-7 –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ CallbackQuery
@dp.message_handler(Text(equals='–º–∞–≥–∞–∑–∏–Ω', ignore_case=True))
@dp.callback_query_handler(lambda c: c.data == 'shop')
async def shop(message: types.CallbackQuery):
    await bot.send_message(message.from_user.id, f'–ü—Ä–µ–¥–º–µ—Ç ubnfhf –ø–æ–º–µ—â—ë–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å')



@dp.callback_query_handler(lambda c: c.data == 'stats')
async def process_callback_button2(callback: types.CallbackQuery): # –í—ã–∑–æ–≤ –º–µ–Ω—é —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    stats = bdStatistic(callback.from_user.id)
    img = stickerStats(stats)

    await callback.message.answer(f'üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞üìä\n'
                                  f'{img[0]}–ó–¥–æ—Ä–æ–≤—å–µ: {stats[0]}\n'
                                  f'üéø–≠–Ω–µ—Ä–≥–∏—è: {stats[1]}\n'
                                  f'üí∞–î–µ–Ω—å–≥–∏ {stats[2]}\n'
                                  f'ü™™–†–µ–ø—É—Ç–∞—Ü–∏—è: {stats[3]}\n'
                                  f'{img[1]}–°–∫–æ—Ä–æ—Å—Ç—å: {stats[4]}\n'
                                  f'{img[2]}–û–ø—ã—Ç: {stats[5]}\n')
    await callback.answer()


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
